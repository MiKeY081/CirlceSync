// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String    @unique
  slang    String?
  password String
  image    String?
  phone    String?
  address  String?
  dob      DateTime?

  Post    Post[]
  Comment Comment[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  follower  Follower[] @relation("follower")
  following Follower[] @relation("following")
}

model Post {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  caption String?
  images  String[]
  likedBy String[]  @db.ObjectId
  comment Comment[]
  share   Boolean   @default(false)
  userId  String?   @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User? @relation(fields: [userId], references: [id])
}

model Comment {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  comment String?
  owner   String? @db.ObjectId
  userId  String? @db.ObjectId
  postId  String? @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User? @relation(fields: [userId], references: [id])
  Post Post? @relation(fields: [postId], references: [id])
}

model Follower {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  follower    User?    @relation("follower", fields: [followerId], references: [id])
  following   User?    @relation("following", fields: [followingId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  followerId  String   @db.ObjectId
  followingId String   @db.ObjectId
}
